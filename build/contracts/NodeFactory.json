{
  "contractName": "NodeFactory",
  "abi": [
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "string",
          "name": "_name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_content",
          "type": "string"
        }
      ],
      "name": "deploy",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "_ownerAddress",
          "type": "address"
        }
      ],
      "name": "getNode",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.5.16+commit.9c3226ce\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":false,\"inputs\":[{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_content\",\"type\":\"string\"}],\"name\":\"deploy\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_ownerAddress\",\"type\":\"address\"}],\"name\":\"getNode\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"/home/13r0ck/Code/Solidity/YVS/contracts/NodeFactory.sol\":\"NodeFactory\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/home/13r0ck/Code/Solidity/YVS/contracts/Node.sol\":{\"keccak256\":\"0x97ae395fe40aefb504342bc171995e3dc267228c3eea2dd340d171691b722e28\",\"urls\":[\"bzz-raw://3ecf5ff60ec1766c4d726d68b9fd1f9a5a9aaa34458ff9ec56fb203641ade38b\",\"dweb:/ipfs/QmdQmfPfDV5UGMqaMWDteKS91gi5FhaVy5P2NPqoA2Mwd3\"]},\"/home/13r0ck/Code/Solidity/YVS/contracts/NodeFactory.sol\":{\"keccak256\":\"0x61f3c5fe49203271196107407ec728abdb49df4edf60b46736601addcde8b79f\",\"urls\":[\"bzz-raw://b79f58d22064b652acecd3661306728d4ab74d0df39f5949e2b131dea5f0f2c4\",\"dweb:/ipfs/QmbPnJEKiwtG1zx9fYDDQmeVBb46v4Dpr7HLvxGeCAjMLu\"]}},\"version\":1}",
  "bytecode": "",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100365760003560e01c80639d2090481461003b578063b5488487146100bf575b600080fd5b61007d6004803603602081101561005157600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061018d565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b61018b600480360360408110156100d557600080fd5b81019080803590602001906401000000008111156100f257600080fd5b82018360208201111561010457600080fd5b8035906020019184600183028401116401000000008311171561012657600080fd5b90919293919293908035906020019064010000000081111561014757600080fd5b82018360208201111561015957600080fd5b8035906020019184600183028401116401000000008311171561017b57600080fd5b90919293919293905050506101f5565b005b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b600073ffffffffffffffffffffffffffffffffffffffff166000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146102d8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260218152602001806116656021913960400191505060405180910390fd5b33848484846040516102e990610422565b808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200180602001806020018381038352878782818152602001925080828437600081840152601f19601f8201169050808301925050508381038252858582818152602001925080828437600081840152601f19601f820116905080830192505050975050505050505050604051809103906000f08015801561039f573d6000803e3d6000fd5b506000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050505050565b611235806104308339019056fe60806040523480156200001157600080fd5b506040516200123538038062001235833981810160405260608110156200003757600080fd5b8101908080519060200190929190805160405193929190846401000000008211156200006257600080fd5b838201915060208201858111156200007957600080fd5b82518660018202830111640100000000821117156200009757600080fd5b8083526020830192505050908051906020019080838360005b83811015620000cd578082015181840152602081019050620000b0565b50505050905090810190601f168015620000fb5780820380516001836020036101000a031916815260200191505b50604052602001805160405193929190846401000000008211156200011f57600080fd5b838201915060208201858111156200013657600080fd5b82518660018202830111640100000000821117156200015457600080fd5b8083526020830192505050908051906020019080838360005b838110156200018a5780820151818401526020810190506200016d565b50505050905090810190601f168015620001b85780820380516001836020036101000a031916815260200191505b5060405250505082600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508160039080519060200190620002189291906200023b565b508060049080519060200190620002319291906200023b565b50505050620002ea565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106200027e57805160ff1916838001178555620002af565b82800160010185558215620002af579182015b82811115620002ae57825182559160200191906001019062000291565b5b509050620002be9190620002c2565b5090565b620002e791905b80821115620002e3576000816000905550600101620002c9565b5090565b90565b610f3b80620002fa6000396000f3fe608060405234801561001057600080fd5b50600436106100a95760003560e01c806379bda9371161007157806379bda937146102a2578063893d20e8146102e6578063ac6c525114610330578063c47f00271461038e578063d088cf7b14610407578063db2e867c14610466576100a9565b806313af4035146100ae57806317d7de7c146100f25780632c983a29146101755780633be8fd6a146101a657806359016c791461021f575b600080fd5b6100f0600480360360208110156100c457600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610494565b005b6100fa61057e565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561013a57808201518184015260208101905061011f565b50505050905090810190601f1680156101675780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6101a46004803603602081101561018b57600080fd5b81019080803560ff169060200190929190505050610620565b005b61021d600480360360208110156101bc57600080fd5b81019080803590602001906401000000008111156101d957600080fd5b8201836020820111156101eb57600080fd5b8035906020019184600183028401116401000000008311171561020d57600080fd5b909192939192939050505061077d565b005b610227610839565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561026757808201518184015260208101905061024c565b50505050905090810190601f1680156102945780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6102e4600480360360208110156102b857600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506108db565b005b6102ee6109ea565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6103726004803603602081101561034657600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610a14565b604051808260ff1660ff16815260200191505060405180910390f35b610405600480360360208110156103a457600080fd5b81019080803590602001906401000000008111156103c157600080fd5b8201836020820111156103d357600080fd5b803590602001918460018302840111640100000000831117156103f557600080fd5b9091929391929390505050610a69565b005b61040f610b25565b6040518080602001828103825283818151815260200191508051906020019060200280838360005b83811015610452578082015181840152602081019050610437565b505050509050019250505060405180910390f35b6104926004803603602081101561047c57600080fd5b8101908080359060200190929190505050610bb3565b005b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461053a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526026815260200180610e9b6026913960400191505060405180910390fd5b80600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b606060038054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156106165780601f106105eb57610100808354040283529160200191610616565b820191906000526020600020905b8154815290600101906020018083116105f957829003601f168201915b5050505050905090565b60648160ff161061067c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526022815260200180610ec16022913960400191505060405180910390fd5b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415610723576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602e815260200180610e6d602e913960400191505060405180910390fd5b806000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908360ff16021790555050565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610823576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526026815260200180610e9b6026913960400191505060405180910390fd5b818160049190610834929190610d9b565b505050565b606060048054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156108d15780601f106108a6576101008083540402835291602001916108d1565b820191906000526020600020905b8154815290600101906020018083116108b457829003601f168201915b5050505050905090565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610981576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526026815260200180610e9b6026913960400191505060405180910390fd5b60018190806001815401808255809150509060018203906000526020600020016000909192909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff169050919050565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610b0f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526026815260200180610e9b6026913960400191505060405180910390fd5b818160039190610b20929190610d9b565b505050565b60606001805480602002602001604051908101604052809291908181526020018280548015610ba957602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311610b5f575b5050505050905090565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610c59576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526026815260200180610e9b6026913960400191505060405180910390fd5b600060018054905011610cb7576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526024815260200180610ee36024913960400191505060405180910390fd5b60006001805480919060019003610cce9190610e1b565b905060018181548110610cdd57fe5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1660018381548110610d1557fe5b9060005260206000200160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060018181548110610d6a57fe5b9060005260206000200160006101000a81549073ffffffffffffffffffffffffffffffffffffffff02191690555050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10610ddc57803560ff1916838001178555610e0a565b82800160010185558215610e0a579182015b82811115610e09578235825591602001919060010190610dee565b5b509050610e179190610e47565b5090565b815481835581811115610e4257818360005260206000209182019101610e419190610e47565b5b505050565b610e6991905b80821115610e65576000816000905550600101610e4d565b5090565b9056fe5765696768742063616e206f6e6c79206265206d6f6469666965642062792072656c6174656420616464726573734f6e6c7920746865206f776e65722063616e20706572666f726d207468697320616374696f6e5765696768742063616e206f6e6c7920766172792066726f6d2030202d3e20313030546865726520617265206e6f2072656c6174696f6e736869707320746f2072656d6f7665a265627a7a723158202f37f3c2243c39f2ee43801873161f460d25bfe3c9f515d2363cfec30ab2ca5364736f6c634300051000324d6178204e6f64657320666f72206d73672e73656e64657220616464726573732ea265627a7a723158209b0e5dc9aab4aa64ee11335f0f35af39d0753280f86e4a49a17efcd57564ad4c64736f6c63430005100032",
  "sourceMap": "48:435:3:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;48:435:3;;;;;;;",
  "deployedSourceMap": "48:435:3:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;48:435:3;;;;;;;;;;;;;;;;;;;;;;;;359:122;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;359:122:3;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;121:232;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;121:232:3;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;121:232:3;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;121:232:3;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;121:232:3;;;;;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;121:232:3;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;121:232:3;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;121:232:3;;;;;;;;;;;;:::i;:::-;;359:122;419:7;453:5;:20;459:13;453:20;;;;;;;;;;;;;;;;;;;;;;;;;438:36;;359:122;;;:::o;121:232::-;239:1;213:28;;:5;:17;219:10;213:17;;;;;;;;;;;;;;;;;;;;;;;;;:28;;;205:74;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;318:10;330:5;;337:8;;309:37;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;309:37:3;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;309:37:3;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;309:37:3;289:5;:17;295:10;289:17;;;;;;;;;;;;;;;;:57;;;;;;;;;;;;;;;;;;121:232;;;;:::o;48:435::-;;;;;;;;:::o",
  "source": "pragma solidity ^0.5.16;\n\nimport './Node.sol';\n\ncontract NodeFactory {\n    mapping (address => Node) private nodes;\n\n    function deploy(string calldata _name, string calldata _content) external {\n        require(nodes[msg.sender] == Node(0), \"Max Nodes for msg.sender address.\");\n        nodes[msg.sender] = new Node(msg.sender, _name, _content);\n    }\n\n    function getNode(address _ownerAddress) public view returns(address) {\n        return address(nodes[_ownerAddress]);\n    }\n}\n\n/*\nThings that I need to test for:\n\n    ## Relationships\n    1. Everything compiles 🗸\n    2. Node can be created\n    3. An address cannot create multiple nodes\n    4. It is possible to get the node address from the owner's address\n    5. Node name/content/owner can be read\n    6. That weights can be modified correctly on each side\n    7. That relationships can be added correctly\n    8. Those relationships are publicly readable\n\n    ## Child Nodes\n    1. A Node can create a childnode\n    3. The children's name/content can be read by owner\n    4. The children's name/content can be read by the public\n    5. The name/content cannot be change by owner nor public (imutable)\n    6. A node can be abandoned\n    7. A node can be signed by another address.\n\n    ## Multiple children\n    1. A parent can create multiple children at the same level\n    2. A parent can create a childNode with a childNode as its parent\n    2. A parent can create a spanning tree of children\n    3. A node can be reparented if owner owns both previous parent and future parent\n\n\n\n*/",
  "sourcePath": "/home/13r0ck/Code/Solidity/YVS/contracts/NodeFactory.sol",
  "ast": {
    "absolutePath": "/home/13r0ck/Code/Solidity/YVS/contracts/NodeFactory.sol",
    "exportedSymbols": {
      "NodeFactory": [
        407
      ]
    },
    "id": 408,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 354,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".16"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:24:3"
      },
      {
        "absolutePath": "/home/13r0ck/Code/Solidity/YVS/contracts/Node.sol",
        "file": "./Node.sol",
        "id": 355,
        "nodeType": "ImportDirective",
        "scope": 408,
        "sourceUnit": 353,
        "src": "26:20:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [],
        "contractDependencies": [
          352
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 407,
        "linearizedBaseContracts": [
          407
        ],
        "name": "NodeFactory",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 359,
            "name": "nodes",
            "nodeType": "VariableDeclaration",
            "scope": 407,
            "src": "75:39:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_contract$_Node_$352_$",
              "typeString": "mapping(address => contract Node)"
            },
            "typeName": {
              "id": 358,
              "keyType": {
                "id": 356,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "84:7:3",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "75:25:3",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_contract$_Node_$352_$",
                "typeString": "mapping(address => contract Node)"
              },
              "valueType": {
                "contractScope": null,
                "id": 357,
                "name": "Node",
                "nodeType": "UserDefinedTypeName",
                "referencedDeclaration": 352,
                "src": "95:4:3",
                "typeDescriptions": {
                  "typeIdentifier": "t_contract$_Node_$352",
                  "typeString": "contract Node"
                }
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "body": {
              "id": 391,
              "nodeType": "Block",
              "src": "195:158:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_contract$_Node_$352",
                          "typeString": "contract Node"
                        },
                        "id": 374,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 367,
                            "name": "nodes",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 359,
                            "src": "213:5:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_contract$_Node_$352_$",
                              "typeString": "mapping(address => contract Node)"
                            }
                          },
                          "id": 370,
                          "indexExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 368,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 422,
                              "src": "219:3:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 369,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "219:10:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "213:17:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_Node_$352",
                            "typeString": "contract Node"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "30",
                              "id": 372,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "239:1:3",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 371,
                            "name": "Node",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 352,
                            "src": "234:4:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_Node_$352_$",
                              "typeString": "type(contract Node)"
                            }
                          },
                          "id": 373,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "234:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_Node_$352",
                            "typeString": "contract Node"
                          }
                        },
                        "src": "213:28:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4d6178204e6f64657320666f72206d73672e73656e64657220616464726573732e",
                        "id": 375,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "243:35:3",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_bbec540962165c069a5b7a145abc7997af6dbbf9e3d2ea9f3fe9f1a011145b74",
                          "typeString": "literal_string \"Max Nodes for msg.sender address.\""
                        },
                        "value": "Max Nodes for msg.sender address."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_bbec540962165c069a5b7a145abc7997af6dbbf9e3d2ea9f3fe9f1a011145b74",
                          "typeString": "literal_string \"Max Nodes for msg.sender address.\""
                        }
                      ],
                      "id": 366,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        425,
                        426
                      ],
                      "referencedDeclaration": 426,
                      "src": "205:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 376,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "205:74:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 377,
                  "nodeType": "ExpressionStatement",
                  "src": "205:74:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 389,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 378,
                        "name": "nodes",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 359,
                        "src": "289:5:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_contract$_Node_$352_$",
                          "typeString": "mapping(address => contract Node)"
                        }
                      },
                      "id": 381,
                      "indexExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 379,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 422,
                          "src": "295:3:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 380,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "295:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "289:17:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Node_$352",
                        "typeString": "contract Node"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 384,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 422,
                            "src": "318:3:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 385,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "318:10:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "id": 386,
                          "name": "_name",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 361,
                          "src": "330:5:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_calldata_ptr",
                            "typeString": "string calldata"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "id": 387,
                          "name": "_content",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 363,
                          "src": "337:8:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_calldata_ptr",
                            "typeString": "string calldata"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          },
                          {
                            "typeIdentifier": "t_string_calldata_ptr",
                            "typeString": "string calldata"
                          },
                          {
                            "typeIdentifier": "t_string_calldata_ptr",
                            "typeString": "string calldata"
                          }
                        ],
                        "id": 383,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "309:8:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$_t_address_$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$_t_contract$_Node_$352_$",
                          "typeString": "function (address,string memory,string memory) returns (contract Node)"
                        },
                        "typeName": {
                          "contractScope": null,
                          "id": 382,
                          "name": "Node",
                          "nodeType": "UserDefinedTypeName",
                          "referencedDeclaration": 352,
                          "src": "313:4:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_Node_$352",
                            "typeString": "contract Node"
                          }
                        }
                      },
                      "id": 388,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "309:37:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Node_$352",
                        "typeString": "contract Node"
                      }
                    },
                    "src": "289:57:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Node_$352",
                      "typeString": "contract Node"
                    }
                  },
                  "id": 390,
                  "nodeType": "ExpressionStatement",
                  "src": "289:57:3"
                }
              ]
            },
            "documentation": null,
            "id": 392,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "deploy",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 364,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 361,
                  "name": "_name",
                  "nodeType": "VariableDeclaration",
                  "scope": 392,
                  "src": "137:21:3",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_calldata_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 360,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "137:6:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 363,
                  "name": "_content",
                  "nodeType": "VariableDeclaration",
                  "scope": 392,
                  "src": "160:24:3",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_calldata_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 362,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "160:6:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "136:49:3"
            },
            "returnParameters": {
              "id": 365,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "195:0:3"
            },
            "scope": 407,
            "src": "121:232:3",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 405,
              "nodeType": "Block",
              "src": "428:53:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 400,
                          "name": "nodes",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 359,
                          "src": "453:5:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_contract$_Node_$352_$",
                            "typeString": "mapping(address => contract Node)"
                          }
                        },
                        "id": 402,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 401,
                          "name": "_ownerAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 394,
                          "src": "459:13:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "453:20:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Node_$352",
                          "typeString": "contract Node"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_Node_$352",
                          "typeString": "contract Node"
                        }
                      ],
                      "id": 399,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "445:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_address_$",
                        "typeString": "type(address)"
                      },
                      "typeName": "address"
                    },
                    "id": 403,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "445:29:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 398,
                  "id": 404,
                  "nodeType": "Return",
                  "src": "438:36:3"
                }
              ]
            },
            "documentation": null,
            "id": 406,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getNode",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 395,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 394,
                  "name": "_ownerAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 406,
                  "src": "376:21:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 393,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "376:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "375:23:3"
            },
            "returnParameters": {
              "id": 398,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 397,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 406,
                  "src": "419:7:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 396,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "419:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "418:9:3"
            },
            "scope": 407,
            "src": "359:122:3",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 408,
        "src": "48:435:3"
      }
    ],
    "src": "0:1548:3"
  },
  "legacyAST": {
    "absolutePath": "/home/13r0ck/Code/Solidity/YVS/contracts/NodeFactory.sol",
    "exportedSymbols": {
      "NodeFactory": [
        407
      ]
    },
    "id": 408,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 354,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".16"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:24:3"
      },
      {
        "absolutePath": "/home/13r0ck/Code/Solidity/YVS/contracts/Node.sol",
        "file": "./Node.sol",
        "id": 355,
        "nodeType": "ImportDirective",
        "scope": 408,
        "sourceUnit": 353,
        "src": "26:20:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [],
        "contractDependencies": [
          352
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 407,
        "linearizedBaseContracts": [
          407
        ],
        "name": "NodeFactory",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 359,
            "name": "nodes",
            "nodeType": "VariableDeclaration",
            "scope": 407,
            "src": "75:39:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_contract$_Node_$352_$",
              "typeString": "mapping(address => contract Node)"
            },
            "typeName": {
              "id": 358,
              "keyType": {
                "id": 356,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "84:7:3",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "75:25:3",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_contract$_Node_$352_$",
                "typeString": "mapping(address => contract Node)"
              },
              "valueType": {
                "contractScope": null,
                "id": 357,
                "name": "Node",
                "nodeType": "UserDefinedTypeName",
                "referencedDeclaration": 352,
                "src": "95:4:3",
                "typeDescriptions": {
                  "typeIdentifier": "t_contract$_Node_$352",
                  "typeString": "contract Node"
                }
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "body": {
              "id": 391,
              "nodeType": "Block",
              "src": "195:158:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_contract$_Node_$352",
                          "typeString": "contract Node"
                        },
                        "id": 374,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 367,
                            "name": "nodes",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 359,
                            "src": "213:5:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_contract$_Node_$352_$",
                              "typeString": "mapping(address => contract Node)"
                            }
                          },
                          "id": 370,
                          "indexExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 368,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 422,
                              "src": "219:3:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 369,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "219:10:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "213:17:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_Node_$352",
                            "typeString": "contract Node"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "30",
                              "id": 372,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "239:1:3",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 371,
                            "name": "Node",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 352,
                            "src": "234:4:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_Node_$352_$",
                              "typeString": "type(contract Node)"
                            }
                          },
                          "id": 373,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "234:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_Node_$352",
                            "typeString": "contract Node"
                          }
                        },
                        "src": "213:28:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4d6178204e6f64657320666f72206d73672e73656e64657220616464726573732e",
                        "id": 375,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "243:35:3",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_bbec540962165c069a5b7a145abc7997af6dbbf9e3d2ea9f3fe9f1a011145b74",
                          "typeString": "literal_string \"Max Nodes for msg.sender address.\""
                        },
                        "value": "Max Nodes for msg.sender address."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_bbec540962165c069a5b7a145abc7997af6dbbf9e3d2ea9f3fe9f1a011145b74",
                          "typeString": "literal_string \"Max Nodes for msg.sender address.\""
                        }
                      ],
                      "id": 366,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        425,
                        426
                      ],
                      "referencedDeclaration": 426,
                      "src": "205:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 376,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "205:74:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 377,
                  "nodeType": "ExpressionStatement",
                  "src": "205:74:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 389,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 378,
                        "name": "nodes",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 359,
                        "src": "289:5:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_contract$_Node_$352_$",
                          "typeString": "mapping(address => contract Node)"
                        }
                      },
                      "id": 381,
                      "indexExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 379,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 422,
                          "src": "295:3:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 380,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "295:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "289:17:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Node_$352",
                        "typeString": "contract Node"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 384,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 422,
                            "src": "318:3:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 385,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "318:10:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "id": 386,
                          "name": "_name",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 361,
                          "src": "330:5:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_calldata_ptr",
                            "typeString": "string calldata"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "id": 387,
                          "name": "_content",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 363,
                          "src": "337:8:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_calldata_ptr",
                            "typeString": "string calldata"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          },
                          {
                            "typeIdentifier": "t_string_calldata_ptr",
                            "typeString": "string calldata"
                          },
                          {
                            "typeIdentifier": "t_string_calldata_ptr",
                            "typeString": "string calldata"
                          }
                        ],
                        "id": 383,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "309:8:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$_t_address_$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$_t_contract$_Node_$352_$",
                          "typeString": "function (address,string memory,string memory) returns (contract Node)"
                        },
                        "typeName": {
                          "contractScope": null,
                          "id": 382,
                          "name": "Node",
                          "nodeType": "UserDefinedTypeName",
                          "referencedDeclaration": 352,
                          "src": "313:4:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_Node_$352",
                            "typeString": "contract Node"
                          }
                        }
                      },
                      "id": 388,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "309:37:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Node_$352",
                        "typeString": "contract Node"
                      }
                    },
                    "src": "289:57:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Node_$352",
                      "typeString": "contract Node"
                    }
                  },
                  "id": 390,
                  "nodeType": "ExpressionStatement",
                  "src": "289:57:3"
                }
              ]
            },
            "documentation": null,
            "id": 392,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "deploy",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 364,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 361,
                  "name": "_name",
                  "nodeType": "VariableDeclaration",
                  "scope": 392,
                  "src": "137:21:3",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_calldata_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 360,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "137:6:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 363,
                  "name": "_content",
                  "nodeType": "VariableDeclaration",
                  "scope": 392,
                  "src": "160:24:3",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_calldata_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 362,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "160:6:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "136:49:3"
            },
            "returnParameters": {
              "id": 365,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "195:0:3"
            },
            "scope": 407,
            "src": "121:232:3",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 405,
              "nodeType": "Block",
              "src": "428:53:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 400,
                          "name": "nodes",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 359,
                          "src": "453:5:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_contract$_Node_$352_$",
                            "typeString": "mapping(address => contract Node)"
                          }
                        },
                        "id": 402,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 401,
                          "name": "_ownerAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 394,
                          "src": "459:13:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "453:20:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Node_$352",
                          "typeString": "contract Node"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_Node_$352",
                          "typeString": "contract Node"
                        }
                      ],
                      "id": 399,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "445:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_address_$",
                        "typeString": "type(address)"
                      },
                      "typeName": "address"
                    },
                    "id": 403,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "445:29:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 398,
                  "id": 404,
                  "nodeType": "Return",
                  "src": "438:36:3"
                }
              ]
            },
            "documentation": null,
            "id": 406,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getNode",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 395,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 394,
                  "name": "_ownerAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 406,
                  "src": "376:21:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 393,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "376:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "375:23:3"
            },
            "returnParameters": {
              "id": 398,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 397,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 406,
                  "src": "419:7:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 396,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "419:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "418:9:3"
            },
            "scope": 407,
            "src": "359:122:3",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 408,
        "src": "48:435:3"
      }
    ],
    "src": "0:1548:3"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.16+commit.9c3226ce.Emscripten.clang"
  },
  "networks": {
    "5777": {
      "events": {},
      "links": {},
      "address": "0x4F769a2664f8Cd27BadB0B30757cee95dF1AB879",
      "transactionHash": "0xa5236ce40cd22216db6be79abbce8dab9f2fd01221538ed63f607fd9b77af65f"
    }
  },
  "schemaVersion": "3.2.0",
  "updatedAt": "2020-06-16T18:43:46.158Z",
  "networkType": "ethereum",
  "devdoc": {
    "methods": {}
  },
  "userdoc": {
    "methods": {}
  }
}