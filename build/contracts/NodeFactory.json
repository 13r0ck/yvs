{
  "contractName": "NodeFactory",
  "abi": [
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "string",
          "name": "_name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_content",
          "type": "string"
        }
      ],
      "name": "deploy",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "_ownerAddress",
          "type": "address"
        }
      ],
      "name": "getNode",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.5.16+commit.9c3226ce\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":false,\"inputs\":[{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_content\",\"type\":\"string\"}],\"name\":\"deploy\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_ownerAddress\",\"type\":\"address\"}],\"name\":\"getNode\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"/home/brock/Code/Solidity/yvs/contracts/NodeFactory.sol\":\"NodeFactory\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/home/brock/Code/Solidity/yvs/contracts/Node.sol\":{\"keccak256\":\"0x63e5f89ec91b61b7bd3708bd4d196550da6261ca0258541ade9ddc668adcbbc2\",\"urls\":[\"bzz-raw://f32b289e9e97cffb19473f2b8920ba688d30b502eb8db44166cf1b6fcfe0db63\",\"dweb:/ipfs/QmSg4HLuYhZuLG6gPbbm2fjJt7xAKHvzgpb1yDnJtjFk2H\"]},\"/home/brock/Code/Solidity/yvs/contracts/NodeFactory.sol\":{\"keccak256\":\"0x947481df2329186405df64b469fcafb3eddd2fa48e1bd9d2fb686ad0509edf55\",\"urls\":[\"bzz-raw://8503c3f7ea5628eaf65d2e5295e4d16decf466c87010b767b2f0ecc7f8e24049\",\"dweb:/ipfs/QmecoCtPFaCQynXZbyVPbdzGpPMuzhRSJqA9VmD5hkvEsa\"]}},\"version\":1}",
  "bytecode": "",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100365760003560e01c80639d2090481461003b578063b5488487146100bf575b600080fd5b61007d6004803603602081101561005157600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061018d565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b61018b600480360360408110156100d557600080fd5b81019080803590602001906401000000008111156100f257600080fd5b82018360208201111561010457600080fd5b8035906020019184600183028401116401000000008311171561012657600080fd5b90919293919293908035906020019064010000000081111561014757600080fd5b82018360208201111561015957600080fd5b8035906020019184600183028401116401000000008311171561017b57600080fd5b90919293919293905050506101f5565b005b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b600073ffffffffffffffffffffffffffffffffffffffff166000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146102d8576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602181526020018061199c6021913960400191505060405180910390fd5b3384848484306040516102ea90610456565b808773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200180602001806020018473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018381038352888882818152602001925080828437600081840152601f19601f8201169050808301925050508381038252868682818152602001925080828437600081840152601f19601f82011690508083019250505098505050505050505050604051809103906000f0801580156103d3573d6000803e3d6000fd5b506000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050505050565b611538806104648339019056fe60806040523480156200001157600080fd5b506040516200153838038062001538833981810160405260808110156200003757600080fd5b8101908080519060200190929190805160405193929190846401000000008211156200006257600080fd5b838201915060208201858111156200007957600080fd5b82518660018202830111640100000000821117156200009757600080fd5b8083526020830192505050908051906020019080838360005b83811015620000cd578082015181840152602081019050620000b0565b50505050905090810190601f168015620000fb5780820380516001836020036101000a031916815260200191505b50604052602001805160405193929190846401000000008211156200011f57600080fd5b838201915060208201858111156200013657600080fd5b82518660018202830111640100000000821117156200015457600080fd5b8083526020830192505050908051906020019080838360005b838110156200018a5780820151818401526020810190506200016d565b50505050905090810190601f168015620001b85780820380516001836020036101000a031916815260200191505b506040526020018051906020019092919050505083600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508260039080519060200190620002259291906200028a565b5081600490805190602001906200023e9291906200028a565b5080600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050505062000339565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10620002cd57805160ff1916838001178555620002fe565b82800160010185558215620002fe579182015b82811115620002fd578251825591602001919060010190620002e0565b5b5090506200030d919062000311565b5090565b6200033691905b808211156200033257600081600090555060010162000318565b5090565b90565b6111ef80620003496000396000f3fe608060405234801561001057600080fd5b50600436106100a95760003560e01c806379bda9371161007157806379bda937146102a2578063893d20e8146102e6578063ac6c525114610330578063c47f00271461038e578063d088cf7b14610407578063db2e867c14610466576100a9565b806313af4035146100ae57806317d7de7c146100f25780632c983a29146101755780633be8fd6a146101a657806359016c791461021f575b600080fd5b6100f0600480360360208110156100c457600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610494565b005b6100fa61057e565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561013a57808201518184015260208101905061011f565b50505050905090810190601f1680156101675780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6101a46004803603602081101561018b57600080fd5b81019080803560ff169060200190929190505050610620565b005b61021d600480360360208110156101bc57600080fd5b81019080803590602001906401000000008111156101d957600080fd5b8201836020820111156101eb57600080fd5b8035906020019184600183028401116401000000008311171561020d57600080fd5b909192939192939050505061077d565b005b610227610839565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561026757808201518184015260208101905061024c565b50505050905090810190601f1680156102945780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6102e4600480360360208110156102b857600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506108db565b005b6102ee610c75565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6103726004803603602081101561034657600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610c9f565b604051808260ff1660ff16815260200191505060405180910390f35b610405600480360360208110156103a457600080fd5b81019080803590602001906401000000008111156103c157600080fd5b8201836020820111156103d357600080fd5b803590602001918460018302840111640100000000831117156103f557600080fd5b9091929391929390505050610cf4565b005b61040f610db0565b6040518080602001828103825283818151815260200191508051906020019060200280838360005b83811015610452578082015181840152602081019050610437565b505050509050019250505060405180910390f35b6104926004803603602081101561047c57600080fd5b8101908080359060200190929190505050610e3e565b005b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461053a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602681526020018061114f6026913960400191505060405180910390fd5b80600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b606060038054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156106165780601f106105eb57610100808354040283529160200191610616565b820191906000526020600020905b8154815290600101906020018083116105f957829003601f168201915b5050505050905090565b60648160ff161061067c576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260228152602001806111756022913960400191505060405180910390fd5b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415610723576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602e815260200180611121602e913960400191505060405180910390fd5b806000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908360ff16021790555050565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610823576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602681526020018061114f6026913960400191505060405180910390fd5b818160049190610834929190611026565b505050565b606060048054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156108d15780601f106108a6576101008083540402835291602001916108d1565b820191906000526020600020905b8154815290600101906020018083116108b457829003601f168201915b5050505050905090565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610981576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602681526020018061114f6026913960400191505060405180910390fd5b3073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610a06576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260298152602001806110f86029913960400191505060405180910390fd5b60008190506000600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508273ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16639d2090488473ffffffffffffffffffffffffffffffffffffffff1663893d20e86040518163ffffffff1660e01b815260040160206040518083038186803b158015610aab57600080fd5b505afa158015610abf573d6000803e3d6000fd5b505050506040513d6020811015610ad557600080fd5b81019080805190602001909291905050506040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060206040518083038186803b158015610b4657600080fd5b505afa158015610b5a573d6000803e3d6000fd5b505050506040513d6020811015610b7057600080fd5b810190808051906020019092919050505073ffffffffffffffffffffffffffffffffffffffff1614610c0a576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260188152602001807f53656e646572206d75737420626520746865206f776e6572000000000000000081525060200191505060405180910390fd5b60018390806001815401808255809150509060018203906000526020600020016000909192909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050505050565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff169050919050565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610d9a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602681526020018061114f6026913960400191505060405180910390fd5b818160039190610dab929190611026565b505050565b60606001805480602002602001604051908101604052809291908181526020018280548015610e3457602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311610dea575b5050505050905090565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610ee4576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602681526020018061114f6026913960400191505060405180910390fd5b600060018054905011610f42576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260248152602001806111976024913960400191505060405180910390fd5b60006001805480919060019003610f5991906110a6565b905060018181548110610f6857fe5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1660018381548110610fa057fe5b9060005260206000200160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060018181548110610ff557fe5b9060005260206000200160006101000a81549073ffffffffffffffffffffffffffffffffffffffff02191690555050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061106757803560ff1916838001178555611095565b82800160010185558215611095579182015b82811115611094578235825591602001919060010190611079565b5b5090506110a291906110d2565b5090565b8154818355818111156110cd578183600052602060002091820191016110cc91906110d2565b5b505050565b6110f491905b808211156110f05760008160009055506001016110d8565b5090565b9056fe43616e6e6f742063726561746520612072656c6174696f6e736869702077697468206f6e6573656c665765696768742063616e206f6e6c79206265206d6f6469666965642062792072656c6174656420616464726573734f6e6c7920746865206f776e65722063616e20706572666f726d207468697320616374696f6e5765696768742063616e206f6e6c7920766172792066726f6d2030202d3e20313030546865726520617265206e6f2072656c6174696f6e736869707320746f2072656d6f7665a265627a7a723158205ba089dd796333c77e5681a901b271b409be34fbbcc1b26922e1d94e9021742f64736f6c634300051000324d6178204e6f64657320666f72206d73672e73656e64657220616464726573732ea265627a7a72315820512fbb31ff806f349ca0fda0afe4220d9091a86c47874a4ac0844c910e8d2e5864736f6c63430005100032",
  "sourceMap": "48:450:3:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;48:450:3;;;;;;;",
  "deployedSourceMap": "48:450:3:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;48:450:3;;;;;;;;;;;;;;;;;;;;;;;;374:122;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;374:122:3;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;121:247;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;121:247:3;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;121:247:3;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;121:247:3;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;121:247:3;;;;;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;121:247:3;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;121:247:3;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;121:247:3;;;;;;;;;;;;:::i;:::-;;374:122;434:7;468:5;:20;474:13;468:20;;;;;;;;;;;;;;;;;;;;;;;;;453:36;;374:122;;;:::o;121:247::-;239:1;213:28;;:5;:17;219:10;213:17;;;;;;;;;;;;;;;;;;;;;;;;;:28;;;205:74;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;318:10;330:5;;337:8;;355:4;309:52;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;309:52:3;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;309:52:3;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;309:52:3;289:5;:17;295:10;289:17;;;;;;;;;;;;;;;;:72;;;;;;;;;;;;;;;;;;121:247;;;;:::o;48:450::-;;;;;;;;:::o",
  "source": "pragma solidity ^0.5.16;\n\nimport './Node.sol';\n\ncontract NodeFactory {\n    mapping (address => Node) private nodes;\n\n    function deploy(string calldata _name, string calldata _content) external {\n        require(nodes[msg.sender] == Node(0), \"Max Nodes for msg.sender address.\");\n        nodes[msg.sender] = new Node(msg.sender, _name, _content, address(this));\n    }\n\n    function getNode(address _ownerAddress) public view returns(address) {\n        return address(nodes[_ownerAddress]);\n    }\n}\n\n/*\nThings that I need to test for:\n\n    ## Relationships\n    1. Everything compiles +\n    2. Node can be created +\n    3. Multiple addresses can create individual nodes +\n    4. A Node's address can be publicly found from owner's address. +\n    5. An address cannot create multiple nodes +\n    6. Node name/content/owner can be read +\n    7. The Name/content can be modified by owner\n    8. The name/content cannot be modified by non-owner\n    9. That weights can be modified correctly on each side +\n    10. Weights cannot be greater than 100 nor less than 0 +\n    11. Weights to oneself cannot be changed +\n    12. That relationship(s) can be added +\n    13. An address cannot add a relationship to a node they do not own +\n    14. A node cannot add a relationship to itself. +\n    15. The relationship must be a valid node.\n    16. A relationship can be deleted by owner\n    17. A relationship cannot be deleted by someone who is not the owner\n    18. Those relationships are publicly readable\n\n    ## Child Nodes\n    1. A Node can create a childnode\n    3. The children's name/content can be read by owner\n    4. The children's name/content can be read by the public\n    5. The name/content cannot be change by owner nor public (imutable)\n    6. A node can be abandoned\n    7. A node can be signed by another address.\n\n    ## Multiple children\n    1. A parent can create multiple children at the same level\n    2. A parent can create a childNode with a childNode as its parent\n    2. A parent can create a spanning tree of children\n    3. A node can be reparented if owner owns both previous parent and future parent\n\n\n\n*/",
  "sourcePath": "/home/brock/Code/Solidity/yvs/contracts/NodeFactory.sol",
  "ast": {
    "absolutePath": "/home/brock/Code/Solidity/yvs/contracts/NodeFactory.sol",
    "exportedSymbols": {
      "NodeFactory": [
        452
      ]
    },
    "id": 453,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 396,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".16"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:24:3"
      },
      {
        "absolutePath": "/home/brock/Code/Solidity/yvs/contracts/Node.sol",
        "file": "./Node.sol",
        "id": 397,
        "nodeType": "ImportDirective",
        "scope": 453,
        "sourceUnit": 395,
        "src": "26:20:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [],
        "contractDependencies": [
          394
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 452,
        "linearizedBaseContracts": [
          452
        ],
        "name": "NodeFactory",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 401,
            "name": "nodes",
            "nodeType": "VariableDeclaration",
            "scope": 452,
            "src": "75:39:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_contract$_Node_$394_$",
              "typeString": "mapping(address => contract Node)"
            },
            "typeName": {
              "id": 400,
              "keyType": {
                "id": 398,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "84:7:3",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "75:25:3",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_contract$_Node_$394_$",
                "typeString": "mapping(address => contract Node)"
              },
              "valueType": {
                "contractScope": null,
                "id": 399,
                "name": "Node",
                "nodeType": "UserDefinedTypeName",
                "referencedDeclaration": 394,
                "src": "95:4:3",
                "typeDescriptions": {
                  "typeIdentifier": "t_contract$_Node_$394",
                  "typeString": "contract Node"
                }
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "body": {
              "id": 436,
              "nodeType": "Block",
              "src": "195:173:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_contract$_Node_$394",
                          "typeString": "contract Node"
                        },
                        "id": 416,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 409,
                            "name": "nodes",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 401,
                            "src": "213:5:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_contract$_Node_$394_$",
                              "typeString": "mapping(address => contract Node)"
                            }
                          },
                          "id": 412,
                          "indexExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 410,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 467,
                              "src": "219:3:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 411,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "219:10:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "213:17:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_Node_$394",
                            "typeString": "contract Node"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "30",
                              "id": 414,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "239:1:3",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 413,
                            "name": "Node",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 394,
                            "src": "234:4:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_Node_$394_$",
                              "typeString": "type(contract Node)"
                            }
                          },
                          "id": 415,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "234:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_Node_$394",
                            "typeString": "contract Node"
                          }
                        },
                        "src": "213:28:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4d6178204e6f64657320666f72206d73672e73656e64657220616464726573732e",
                        "id": 417,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "243:35:3",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_bbec540962165c069a5b7a145abc7997af6dbbf9e3d2ea9f3fe9f1a011145b74",
                          "typeString": "literal_string \"Max Nodes for msg.sender address.\""
                        },
                        "value": "Max Nodes for msg.sender address."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_bbec540962165c069a5b7a145abc7997af6dbbf9e3d2ea9f3fe9f1a011145b74",
                          "typeString": "literal_string \"Max Nodes for msg.sender address.\""
                        }
                      ],
                      "id": 408,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        470,
                        471
                      ],
                      "referencedDeclaration": 471,
                      "src": "205:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 418,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "205:74:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 419,
                  "nodeType": "ExpressionStatement",
                  "src": "205:74:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 434,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 420,
                        "name": "nodes",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 401,
                        "src": "289:5:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_contract$_Node_$394_$",
                          "typeString": "mapping(address => contract Node)"
                        }
                      },
                      "id": 423,
                      "indexExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 421,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 467,
                          "src": "295:3:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 422,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "295:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "289:17:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Node_$394",
                        "typeString": "contract Node"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 426,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 467,
                            "src": "318:3:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 427,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "318:10:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "id": 428,
                          "name": "_name",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 403,
                          "src": "330:5:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_calldata_ptr",
                            "typeString": "string calldata"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "id": 429,
                          "name": "_content",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 405,
                          "src": "337:8:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_calldata_ptr",
                            "typeString": "string calldata"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 431,
                              "name": "this",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 481,
                              "src": "355:4:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_NodeFactory_$452",
                                "typeString": "contract NodeFactory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_NodeFactory_$452",
                                "typeString": "contract NodeFactory"
                              }
                            ],
                            "id": 430,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "347:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": "address"
                          },
                          "id": 432,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "347:13:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          },
                          {
                            "typeIdentifier": "t_string_calldata_ptr",
                            "typeString": "string calldata"
                          },
                          {
                            "typeIdentifier": "t_string_calldata_ptr",
                            "typeString": "string calldata"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 425,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "309:8:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$_t_address_$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_address_$returns$_t_contract$_Node_$394_$",
                          "typeString": "function (address,string memory,string memory,address) returns (contract Node)"
                        },
                        "typeName": {
                          "contractScope": null,
                          "id": 424,
                          "name": "Node",
                          "nodeType": "UserDefinedTypeName",
                          "referencedDeclaration": 394,
                          "src": "313:4:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_Node_$394",
                            "typeString": "contract Node"
                          }
                        }
                      },
                      "id": 433,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "309:52:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Node_$394",
                        "typeString": "contract Node"
                      }
                    },
                    "src": "289:72:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Node_$394",
                      "typeString": "contract Node"
                    }
                  },
                  "id": 435,
                  "nodeType": "ExpressionStatement",
                  "src": "289:72:3"
                }
              ]
            },
            "documentation": null,
            "id": 437,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "deploy",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 406,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 403,
                  "name": "_name",
                  "nodeType": "VariableDeclaration",
                  "scope": 437,
                  "src": "137:21:3",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_calldata_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 402,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "137:6:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 405,
                  "name": "_content",
                  "nodeType": "VariableDeclaration",
                  "scope": 437,
                  "src": "160:24:3",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_calldata_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 404,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "160:6:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "136:49:3"
            },
            "returnParameters": {
              "id": 407,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "195:0:3"
            },
            "scope": 452,
            "src": "121:247:3",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 450,
              "nodeType": "Block",
              "src": "443:53:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 445,
                          "name": "nodes",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 401,
                          "src": "468:5:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_contract$_Node_$394_$",
                            "typeString": "mapping(address => contract Node)"
                          }
                        },
                        "id": 447,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 446,
                          "name": "_ownerAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 439,
                          "src": "474:13:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "468:20:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Node_$394",
                          "typeString": "contract Node"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_Node_$394",
                          "typeString": "contract Node"
                        }
                      ],
                      "id": 444,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "460:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_address_$",
                        "typeString": "type(address)"
                      },
                      "typeName": "address"
                    },
                    "id": 448,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "460:29:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 443,
                  "id": 449,
                  "nodeType": "Return",
                  "src": "453:36:3"
                }
              ]
            },
            "documentation": null,
            "id": 451,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getNode",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 440,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 439,
                  "name": "_ownerAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 451,
                  "src": "391:21:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 438,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "391:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "390:23:3"
            },
            "returnParameters": {
              "id": 443,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 442,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 451,
                  "src": "434:7:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 441,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "434:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "433:9:3"
            },
            "scope": 452,
            "src": "374:122:3",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 453,
        "src": "48:450:3"
      }
    ],
    "src": "0:2126:3"
  },
  "legacyAST": {
    "absolutePath": "/home/brock/Code/Solidity/yvs/contracts/NodeFactory.sol",
    "exportedSymbols": {
      "NodeFactory": [
        452
      ]
    },
    "id": 453,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 396,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".16"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:24:3"
      },
      {
        "absolutePath": "/home/brock/Code/Solidity/yvs/contracts/Node.sol",
        "file": "./Node.sol",
        "id": 397,
        "nodeType": "ImportDirective",
        "scope": 453,
        "sourceUnit": 395,
        "src": "26:20:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [],
        "contractDependencies": [
          394
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 452,
        "linearizedBaseContracts": [
          452
        ],
        "name": "NodeFactory",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 401,
            "name": "nodes",
            "nodeType": "VariableDeclaration",
            "scope": 452,
            "src": "75:39:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_contract$_Node_$394_$",
              "typeString": "mapping(address => contract Node)"
            },
            "typeName": {
              "id": 400,
              "keyType": {
                "id": 398,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "84:7:3",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "75:25:3",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_contract$_Node_$394_$",
                "typeString": "mapping(address => contract Node)"
              },
              "valueType": {
                "contractScope": null,
                "id": 399,
                "name": "Node",
                "nodeType": "UserDefinedTypeName",
                "referencedDeclaration": 394,
                "src": "95:4:3",
                "typeDescriptions": {
                  "typeIdentifier": "t_contract$_Node_$394",
                  "typeString": "contract Node"
                }
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "body": {
              "id": 436,
              "nodeType": "Block",
              "src": "195:173:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_contract$_Node_$394",
                          "typeString": "contract Node"
                        },
                        "id": 416,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 409,
                            "name": "nodes",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 401,
                            "src": "213:5:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_contract$_Node_$394_$",
                              "typeString": "mapping(address => contract Node)"
                            }
                          },
                          "id": 412,
                          "indexExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 410,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 467,
                              "src": "219:3:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 411,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "219:10:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "213:17:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_Node_$394",
                            "typeString": "contract Node"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "30",
                              "id": 414,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "239:1:3",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 413,
                            "name": "Node",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 394,
                            "src": "234:4:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_Node_$394_$",
                              "typeString": "type(contract Node)"
                            }
                          },
                          "id": 415,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "234:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_Node_$394",
                            "typeString": "contract Node"
                          }
                        },
                        "src": "213:28:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4d6178204e6f64657320666f72206d73672e73656e64657220616464726573732e",
                        "id": 417,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "243:35:3",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_bbec540962165c069a5b7a145abc7997af6dbbf9e3d2ea9f3fe9f1a011145b74",
                          "typeString": "literal_string \"Max Nodes for msg.sender address.\""
                        },
                        "value": "Max Nodes for msg.sender address."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_bbec540962165c069a5b7a145abc7997af6dbbf9e3d2ea9f3fe9f1a011145b74",
                          "typeString": "literal_string \"Max Nodes for msg.sender address.\""
                        }
                      ],
                      "id": 408,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        470,
                        471
                      ],
                      "referencedDeclaration": 471,
                      "src": "205:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 418,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "205:74:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 419,
                  "nodeType": "ExpressionStatement",
                  "src": "205:74:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 434,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 420,
                        "name": "nodes",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 401,
                        "src": "289:5:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_contract$_Node_$394_$",
                          "typeString": "mapping(address => contract Node)"
                        }
                      },
                      "id": 423,
                      "indexExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 421,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 467,
                          "src": "295:3:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 422,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "295:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "289:17:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Node_$394",
                        "typeString": "contract Node"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 426,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 467,
                            "src": "318:3:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 427,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "318:10:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "id": 428,
                          "name": "_name",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 403,
                          "src": "330:5:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_calldata_ptr",
                            "typeString": "string calldata"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "id": 429,
                          "name": "_content",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 405,
                          "src": "337:8:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_calldata_ptr",
                            "typeString": "string calldata"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 431,
                              "name": "this",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 481,
                              "src": "355:4:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_NodeFactory_$452",
                                "typeString": "contract NodeFactory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_NodeFactory_$452",
                                "typeString": "contract NodeFactory"
                              }
                            ],
                            "id": 430,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "347:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": "address"
                          },
                          "id": 432,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "347:13:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          },
                          {
                            "typeIdentifier": "t_string_calldata_ptr",
                            "typeString": "string calldata"
                          },
                          {
                            "typeIdentifier": "t_string_calldata_ptr",
                            "typeString": "string calldata"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 425,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "309:8:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$_t_address_$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_address_$returns$_t_contract$_Node_$394_$",
                          "typeString": "function (address,string memory,string memory,address) returns (contract Node)"
                        },
                        "typeName": {
                          "contractScope": null,
                          "id": 424,
                          "name": "Node",
                          "nodeType": "UserDefinedTypeName",
                          "referencedDeclaration": 394,
                          "src": "313:4:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_Node_$394",
                            "typeString": "contract Node"
                          }
                        }
                      },
                      "id": 433,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "309:52:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Node_$394",
                        "typeString": "contract Node"
                      }
                    },
                    "src": "289:72:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Node_$394",
                      "typeString": "contract Node"
                    }
                  },
                  "id": 435,
                  "nodeType": "ExpressionStatement",
                  "src": "289:72:3"
                }
              ]
            },
            "documentation": null,
            "id": 437,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "deploy",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 406,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 403,
                  "name": "_name",
                  "nodeType": "VariableDeclaration",
                  "scope": 437,
                  "src": "137:21:3",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_calldata_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 402,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "137:6:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 405,
                  "name": "_content",
                  "nodeType": "VariableDeclaration",
                  "scope": 437,
                  "src": "160:24:3",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_calldata_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 404,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "160:6:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "136:49:3"
            },
            "returnParameters": {
              "id": 407,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "195:0:3"
            },
            "scope": 452,
            "src": "121:247:3",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 450,
              "nodeType": "Block",
              "src": "443:53:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 445,
                          "name": "nodes",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 401,
                          "src": "468:5:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_contract$_Node_$394_$",
                            "typeString": "mapping(address => contract Node)"
                          }
                        },
                        "id": 447,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 446,
                          "name": "_ownerAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 439,
                          "src": "474:13:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "468:20:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Node_$394",
                          "typeString": "contract Node"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_Node_$394",
                          "typeString": "contract Node"
                        }
                      ],
                      "id": 444,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "460:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_address_$",
                        "typeString": "type(address)"
                      },
                      "typeName": "address"
                    },
                    "id": 448,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "460:29:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 443,
                  "id": 449,
                  "nodeType": "Return",
                  "src": "453:36:3"
                }
              ]
            },
            "documentation": null,
            "id": 451,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getNode",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 440,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 439,
                  "name": "_ownerAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 451,
                  "src": "391:21:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 438,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "391:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "390:23:3"
            },
            "returnParameters": {
              "id": 443,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 442,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 451,
                  "src": "434:7:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 441,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "434:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "433:9:3"
            },
            "scope": 452,
            "src": "374:122:3",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 453,
        "src": "48:450:3"
      }
    ],
    "src": "0:2126:3"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.16+commit.9c3226ce.Emscripten.clang"
  },
  "networks": {
    "5777": {
      "events": {},
      "links": {},
      "address": "0xF30D70D0f5444b068804871962F4e4409b841c49",
      "transactionHash": "0x7dbe57a58ab29fbfa78837840aef4cdc7669981f61e5e027aa1cb109e98c3f4c"
    }
  },
  "schemaVersion": "3.2.1",
  "updatedAt": "2020-07-09T03:47:09.167Z",
  "devdoc": {
    "methods": {}
  },
  "userdoc": {
    "methods": {}
  }
}